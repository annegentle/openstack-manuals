<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="setting-up-openstack-compute-environment-on-the-compute-node"
    xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <title>Setting Up OpenStack Compute Environment on the Compute Node</title>
    <para>
        These are the commands you run to ensure the database schema is current, and
        then set up a user and project, if you are using built-in auth with the
        <literallayout class="monospaced">--use_deprecated_auth flag</literallayout> rather than the Identity Service: 
    </para>
    <para>
        <literallayout class="monospaced">
nova-manage db sync
nova-manage user admin &lt;user_name>
nova-manage project create &lt;project_name> &lt;user_name>
nova-manage network create &lt;network-label> &lt;project-network> &lt;number-of-networks-in-project> &lt;addresses-in-each-network>
</literallayout>
    </para>
    <para>Here is an example of what this looks like with real values entered: </para>
    <literallayout class="monospaced">
nova-manage db sync
nova-manage user admin dub
nova-manage project create dubproject dub
nova-manage network create novanet 192.168.0.0/24 1 256 
                </literallayout>
    <para>For this example, the number of IPs is /24 since that falls inside the /16
        range that was set in ‘fixed-range’ in nova.conf. Currently, there can only be
        one network, and this set up would use the max IPs available in a /24. You can
        choose values that let you use any valid amount that you would like. </para>
    <para>The nova-manage service assumes that the first IP address is your network
        (like 192.168.0.0), that the 2nd IP is your gateway (192.168.0.1), and that the
        broadcast is the very last IP in the range you defined (192.168.0.255). If this is
        not the case you will need to manually edit the sql db ‘networks’ table.o. </para>
    <para>When you run the nova-manage network create command, entries are made
        in the ‘networks’ and ‘fixed_ips’ table. However, one of the networks listed in the
        ‘networks’ table needs to be marked as bridge in order for the code to know that a
        bridge exists. The network in the Nova networks table is marked as bridged
        automatically for Flat Manager.</para>
    <section xml:id="creating-certifications">
        <title>Creating Credentials</title>
        <para>Generate the credentials as a zip file. These are the certs you will use to
            launch instances, bundle images, and all the other assorted API functions. </para>
        <para>
            <literallayout class="monospaced">
mkdir –p /root/creds
/usr/bin/python /usr/bin/nova-manage project zipfile $NOVA_PROJECT $NOVA_PROJECT_USER /root/creds/novacreds.zip
                    </literallayout>
        </para>
        <para>If you are using one of the Flat modes for networking, you may see a Warning
            message "No vpn data for project &lt;project_name>" which you can safely
            ignore.</para>
        <para>Unzip them in your home directory, and add them to your environment. </para>
        <literallayout class="monospaced">
unzip /root/creds/novacreds.zip -d /root/creds/
cat /root/creds/novarc >> ~/.bashrc
source ~/.bashrc 
                </literallayout>
        <para>
            If you already have Nova credentials present in your environment, you can use a script included with Glance the Image Service, tools/nova_to_os_env.sh, to create Glance-style credentials. This script adds OS_AUTH credentials to the environment which are used by the Image Service to enable private images when the Identity Service is configured as the authentication system for Compute and the Image Service.</para>
    </section>
</section>
